Какой алгоритм лучше всего подходит для решения задачи:

а) Циклически сдвинуть элементы так, чтобы i-й стал первым. - Циклический сдвиг - функции std::rotate() или std::shift_left().

б) Записать в новый список всех, кроме тех, кто удовлетворяет определённому условию. - Фильтрация - функция std::remove_if().

в) Удалить повторы из предварительно отсортированной коллекции, чтобы каждое значение встречалось только один раз. - Удаление повторов - функция std::unique().

г) Переместить в новую коллекцию элементы без подряд идущих повторов. -  Удаление подряд идущих повторов - функция std::unique().

д) Переставить все те элементы, для которых выполняется некоторое условие, в начало. - Перемещение элементов - функции std::partition() или std::stable_partition().

е) Найти i-го по порядку, т.е. определить, кто будет стоять на позиции i после сортировки (без сортировки). - Поиск i-го по порядку - функция std::nth_element().

ж) Определить, содержатся ли все элементы второй коллекции в первой. - Проверка на вхождение - функция std::includes()

з) Быстро проверить, есть ли элемент в предварительно отсортированной коллекции. - Бинарный поиск - функция std::binary_search().

и) Найти 2 стоящих рядом элемента, которые совпадают по какому-то критерию. - Поиск пары совпадающих элементов - функция std::adjacent_find().
